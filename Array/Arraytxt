 Java 中的数组也是存储相同类型数据的，但所使用的内存空间却不一定是连续（多维数组中）。且如果是多维数组，其嵌套数组的长度也可以不同。例如：
int[][] arr = new int[3][]{ {1,2,3}, {4,5}, {6,7,8,9}};
其访问元素、改变元素的时间复杂度为 O(1)，在尾部插入、删除元素的时间复杂度也是O(1) ，普通情况下插入、删除元素的时间复杂度为O(n) 。

一、数组操作题目 #
题号	标题	题解	标签	难度
1.0189	轮转数组	Python	数组	简单
    额外数组/交换/翻转数组
2.0066	加一	Python	数组	简单
    digits = new int[digits.length + 1]; digits[0] = 1;
    有多的进位说明后面的几位一定为0，只需要赋值最高位；
3.0724	寻找数组的中心下标	Python	数组	简单
4.0485	最大连续 1 的个数	Python	数组	简单
5.0238	除自身以外数组的乘积	Python	数组	中等
二、二维数组题目 #    基本都是找规律
题号	标题	题解	标签	难度
1.0498	对角线遍历	Python	数组、矩阵、模拟	中等
2.0048	旋转图像	Python	数组	中等
3.0073	矩阵置零	Python	数组	中等
    用输出变量做标志位
4.0054	螺旋矩阵	Python	数组	中等
5.0059	螺旋矩阵 II	Python	数组、矩阵、模拟	中等
6.0289	生命游戏	Python	数组、矩阵、模拟	中等
    复合状态

三、排序算法题目 重要：快排，归并排序，堆排序，
常见的排序算法都是比较排序，非比较排序包括计数排序、桶排序和基数排序，非比较排序对数据有要求，因为数据本身包含了定位特征，所有才能不通过比较来确定元素的位置。
比较排序的时间复杂度通常为O(n2)或者O(nlogn)，比较排序的时间复杂度下界就是O(nlogn)，而非比较排序的时间复杂度可以达到O(n)，但是都需要额外的空间开销。

稳定性比较：简单地说就是所有相等的数经过某种排序方法后，仍能保持它们在排序之前的相对次序，我们就说这种排序方法是稳定的
插入排序、冒泡排序、二叉树排序、二路归并排序及其他线形排序是稳定的；
选择排序、希尔排序、快速排序、堆排序是不稳定的。

排序的稳定性和复杂度
  不稳定：
  选择排序（selection sort）— O(n2) 适用交换成本较高的排序任务
  快速排序（quicksort）— O(nlogn) 平均时间, O(n2) 最坏情况; 对于大的、乱序串列一般认为是最快的已知排序 「快速排序」在「分」这件事情上不像「归并排序」无脑地一分为二，而是采用了 partition 的方法
  堆排序 （heapsort）— O(nlogn) 「优先队列」的最好实现就是「堆」。
  希尔排序 （shell sort）— O(nlogn) 插入排序的优化，GAP依次减小
  基数排序（radix sort）— O(n·k); 需要 O(n) 额外存储空间 （K为特征个数） 「基数排序」用到了「计数排序」
  稳定：
  插入排序（insertion sort）— O(n2)「插入排序」在「几乎有序」的数组上表现良好，特别地，在「短数组」上的表现也很好。
  冒泡排序（bubble sort） — O(n2)
  归并排序 （merge sort）— O(n log n); 需要 O(n) 额外存储空间 「归并排序」比「快速排序」好的一点是，它借助了额外空间，可以实现「稳定排序」
  二叉树排序（Binary tree sort） — O(nlogn); 需要 O(n) 额外存储空间
  计数排序  (counting sort) — O(n+k); 需要 O(n+k) 额外存储空间，k为序列中Max-Min+1 把每个出现的数值都做一个计数，然后根据计数从小到大输出得到有序数组。
  桶排序 （bucket sort）— O(n); 需要 O(k) 额外存储空间

1.冒泡排序题目 #
题号	标题	题解	标签	难度
0283	移动零	Python	数组、双指针	简单
2.选择排序题目 # 选出未排序中的最小元素并交换到边界上
题号	标题	题解	标签	难度
0215	数组中的第K个最大元素	Python	数组、堆排序	中等
选择排序O(n2)；快速排序期望O(n);堆排序O(nlogn)

3.插入排序题目 # 未排序元素和已排序元素一个个比较后找到合适位置插入
题号	标题	题解	标签	难度
0075	颜色分类	Python	数组、排序、双指针	中等
单指针；双指针；
4.希尔排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
归并排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
0088	合并两个有序数组	Python	数组、双指针	简单
剑指 Offer 51	数组中的逆序对	Python	树状数组、线段树、数组、二分查找、分治、有序集合、归并排序	困难
快速排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
0169	多数元素	Python	数组、哈希表	简单
堆排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
0215	数组中的第K个最大元素	Python	数组、堆排序	中等
剑指 Offer 40	最小的k个数	Python	数组、分治、快速选择、排序、堆（优先队列）	简单
计数排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
桶排序题目 #
题号	标题	题解	标签	难度
0912	排序数组	Python	数组、分治、桶排序、计数排序、基数排序、排序、堆（优先队列）	中等
基数排序题目 #
题号	标题	题解	标签	难度
0164	最大间距	Python	数组、桶排序、基数排序、排序	困难
其他排序题目 #
题号	标题	题解	标签	难度
0136	只出现一次的数字	Python	位运算、数组	简单
0056	合并区间	Python	数组、排序	中等
0179	最大数	Python	贪心、字符串、排序	中等
0384	打乱数组	Python	数组、数学、随机化	中等
剑指 Offer 45	把数组排成最小的数	Python	贪心、字符串、排序	中等